@page 
@model CmsHeadless.Pages.Content.IndexModel
@{
}




<div class="col-12 custom-form-border">
    <form method="post"  class="row custom-form" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-12 col-xl-6">
            <div class="form-group">
                <label asp-for="_formContentModel.Title" class="control-label"></label>
                <input asp-for="_formContentModel.Title" class="form-control textForm" required/>
                <span asp-validation-for="_formContentModel.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="_formContentModel.Media" class="control-label"></label>
                <input asp-for="_formContentModel.Media" class="form-control textForm" />
                <span asp-validation-for="_formContentModel.Media" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="_formContentModel.Description" class="control-label"></label>
                <input asp-for="_formContentModel.Description" class="form-control textForm" />
                <span asp-validation-for="_formContentModel.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="_formContentModel.Text" class="control-label"></label>
                <input asp-for="_formContentModel.Text" class="form-control textForm" required/>
                <span asp-validation-for="_formContentModel.Text" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="_formContentModel.PubblicationDate" class="control-label">Pubblication Date</label>
                <input asp-for="_formContentModel.PubblicationDate" class="form-control dateForm" />
                <span asp-validation-for="_formContentModel.PubblicationDate" class="text-danger"></span>
            </div>
        </div>
        <div class="col-12 col-xl-2 form-group">
            <label asp-for="_formContentModel.ContentAttributes" class="control-label">Attributes</label>
            <select asp-for="_formContentModel.ContentAttributes" class="form-select selectForm" multiple size="15">
                @{
                    foreach(var i in Model.AttributesAvailable)
                    {
                         <option value="@i.AttributesId" id="@i.AttributesId">@i.AttributeName</option>
                    }
                }
            </select>
            <span asp-validation-for="_formContentModel.ContentAttributes" class="text-danger"></span>
        </div>
        <div class="col-12 col-xl-2 form-group">
            <label asp-for="_formContentModel.ContentCategory" class="control-label">Categories</label>
            <select asp-for="_formContentModel.ContentCategory" class="form-select selectForm" multiple size="15">
                @{
                    foreach(var i in Model.CategoryAvailable)
                    {
                        <option value="@i.CategoryId" id="@i.CategoryId">@i.Name</option>
                    }
                }
            </select>
            <span asp-validation-for="_formContentModel.ContentCategory" class="text-danger"></span>
        </div>
        <div class="col-12 col-xl-2 form-group">
            <label asp-for="_formContentModel.ContentTag" class="control-label">Tags</label>
            <select asp-for="_formContentModel.ContentTag" class="form-select selectForm" multiple size="15">
                @{
                    foreach(var i in Model.TagAvailable)
                    {
                        <option value="@i.TagId" id="@i.TagId">@i.Name</option>
                    }
                }
            </select>
            <span asp-validation-for="_formContentModel.ContentTag" class="text-danger"></span>
        </div>
        <p></p>
        <hr />
        <h5>Compilare i campi che seguono se si vuole associare una località al contenuto</h5>

        <div class="col-12 col-xl-3 form-group">
            <label asp-for="_formContentModel.Nation" class="control-label"></label>
           
            <select id="NationSelectContentCreate" asp-for="_formContentModel.Nation" class="form-select selectForm">
                <option value="-1">Select Nation</option>
                @{
                    foreach(var i in Model.NationAvailable)
                    {
                        if (i.NationIsActive)
                        {
                             <option value="@i.NationId" id="@i.NationId">@i.NationName</option>
                        }
                    }
                }
            </select>
            <span asp-validation-for="_formContentModel.Nation" class="text-danger"></span>
        </div>

        <div class="col-12 col-xl-3 form-group">
            <label asp-for="_formContentModel.Region" class="control-label"></label>
            <select id="RegionSelectContentCreate" asp-for="_formContentModel.Region" class="form-select selectForm" disabled="disabled">
                
            </select>
            <span asp-validation-for="_formContentModel.Region" class="text-danger"></span>
        </div>

        <div class="col-12 col-xl-3 form-group">
            <label asp-for="_formContentModel.Province" class="control-label"></label>
            <select id="ProvinceSelectContentCreate" asp-for="_formContentModel.Province" class="form-select selectForm" disabled="disabled">
                
            </select>
            <span asp-validation-for="_formContentModel.Province" class="text-danger"></span>
        </div>

        <div class="form-group col-12 col-xl-3">
            <label asp-for="_formContentModel.City" class="control-label"></label>
            <input id="CitySelectContentCreate" asp-for="_formContentModel.City" class="form-control textForm" disabled="disabled"/>
            <span asp-validation-for="_formContentModel.City" class="text-danger"></span>
        </div>

        <div class="form-group">
            <input asp-page-handler="Create" type="submit" value="Create" class="btn btn-primary" />
        </div>
    </form>
</div>

@{
    if(IndexModel.lastCreate>0 && ModelState.ErrorCount == 0)
    {
    <div class="alert alert-success" role="alert">
                     <p>Contenuto inserito con successo</p>
    </div>
    }
}
@if(ModelState.ErrorCount > 0)
{
    <div class="alert alert-danger" role="alert">
        @Html.ValidationSummary(false, "", new { @class = "text-danger font-weight-bold" })
    </div>
}


<div class="row justify-content-between">
    <div class="col-4">
        <h1>Lista content</h1>
    </div>
    <div class="col-4">
        <form>
            <p>
                Search: <input type="text" name="searchString" />
                <span class="form-group">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </span>
            </p>
        </form>
    </div>
</div>
<table class="table table-striped table-bordered" id="contentList">
  <thead >
    <tr>
      <th scope="col">#</th>
      <th scope="col">Title</th>
      <th scope="col">Description</th>
      <th scope="col">Insertion Date</th>
      <th scope="col">Image</th>
      <th scope="col">Text</th>
      <th scope="col">User</th>
      <th scope="col">Last Edit</th>
      <th scope="col">Pubblication Date</th>
    </tr>
  </thead>
  <tbody class="table-group-divider">
        @{
            if(Model.ContentList!=null){
            int k=1+(Model.ContentList.PageIndex-1)*IndexModel.numberPage ;
                @foreach (var item in Model.ContentList)
                {
                    <tr>
                        <th scope="row">
                            @k
                        </th>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.InsertionDate)
                        </td>
                        <td>
                            <img style="max-height:100px" src="@Html.DisplayFor(modelItem => item.Media)" alt="image not available"/>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text)
                        </td>
                        <td>
                        @{
                            var temp=item.UserId;
                            string user = Model.Users.Find(c=>c.Id==temp).Email;
                        }
                        @user    
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastEdit)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PubblicationDate)
                        </td>
                        <td>
                                <a asp-page="./EditContent" asp-route-id="@item.ContentId">Edit</a> |
                                                                                                 
                                <a asp-page="index" asp-page-handler="Delete" asp-route-contentId="@item.ContentId">Delete</a>
                        </td>
                    </tr>
                    k++;
                }
            }
            else
            {
                        <h1>C'è stato un problema relativo al database. Ricaricare la pagina</h1>
                return;
            }
       }

  </tbody>
</table>

@if(IndexModel.callDelete==true && IndexModel.lastDelete>0 && ModelState.ErrorCount == 0)
{
    <div class="alert alert-success" role="alert">
        <p>Contenuto eliminato con successo</p>
    </div>
}
else if(IndexModel.callDelete==true && IndexModel.lastDelete==0 && ModelState.ErrorCount != 0)
{
    <div class="alert alert-danger" role="alert">
        <p>Errore nell'eliminazione'</p>
    </div>
}

@{
    
    var prevDisabled = !Model.ContentList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.ContentList.HasNextPage ? "disabled" : "";
}

<a href="/Content/Index?pageIndex=@(Model.ContentList.PageIndex - 1)&searchString=@IndexModel.searchString"
class="btn btn-default @prevDisabled">
        Previous
</a>

<a href="/Content/Index?pageIndex=@(Model.ContentList.PageIndex + 1)&searchString=@IndexModel.searchString"
class="btn btn-default @nextDisabled">
        Next
</a>


    @section Scripts{
    <script type="text/javascript">

$(document).ready(function(){
    $("#NationSelectContentCreate").change(function() {
        var selectedNation = $("#NationSelectContentCreate option:selected").val();
        $("#RegionSelectContentCreate").empty();
        $("#ProvinceSelectContentCreate").empty();
        $("#ProvinceSelectContentCreate").attr('disabled','disabled');
        $("#CitySelectContentCreate").attr('disabled','disabled');
        $("#CitySelectContentCreate").val("");
        if (selectedNation == -1) {
            $("#RegionSelectContentCreate").attr('disabled','disabled');
            return;
        }
        $("#RegionSelectContentCreate").removeAttr('disabled'); 
        
        $.ajax({
            type: "GET",
            url: '@Url.Action("LoadRegion")',
            dataType: 'json',
            data: {
                id: parseInt(selectedNation)
            },
            success: function(states) {
                $("#RegionSelectContentCreate").append(
                    '<option value="' + -1 + '">' + "Select Region" + '</option>');

                $.each(states, function(i, state) {
                    $("#RegionSelectContentCreate").append(
                        '<option value="' + state.RegionId + '">' + state.RegionName + '</option>');
                });
            }
        });
    });
});


$(document).ready(function(){
    $("#RegionSelectContentCreate").change(function() {
        var selectedRegion = $("#RegionSelectContentCreate option:selected").val();
        $("#ProvinceSelectContentCreate").empty();
        $("#CitySelectContentCreate").attr('disabled','disabled');
        $("#CitySelectContentCreate").val("");
        if (selectedRegion == -1) {
            $("#ProvinceSelectContentCreate").attr('disabled','disabled');
            return;
        }
        $("#ProvinceSelectContentCreate").removeAttr('disabled');
        
        $.ajax({
            type: "GET",
            url: '@Url.Action("LoadProvince")',
            dataType: 'json',
            data: {
                id: parseInt(selectedRegion)
            },
            success: function(states) {
                $("#ProvinceSelectContentCreate").append(
                    '<option value="' + -1 + '">' + "Select Province" + '</option>');

                $.each(states, function(i, state) {
                    $("#ProvinceSelectContentCreate").append(
                        '<option value="' + state.ProvinceId + '">' + state.ProvinceName + '</option>');
                });
            }
        });
    });
});


$(document).ready(function(){
    $("#ProvinceSelectContentCreate").change(function() {
        var selectedProvince = $("#ProvinceSelectContentCreate option:selected").val();
        $("#CitySelectContentCreate").val("");
        if (selectedProvince == -1) {
            $("#CitySelectContentCreate").attr('disabled','disabled');
            return;
        }
        $("#CitySelectContentCreate").removeAttr('disabled');
    });
});

</script>
}

    @{
    IndexModel.lastCreate = 0;
    IndexModel.lastDelete = 0;
    IndexModel.searchString = null;
    IndexModel.callDelete = false;
}