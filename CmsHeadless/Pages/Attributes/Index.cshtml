@page
@model CmsHeadless.Pages.Attributes.IndexModel

@{
}

<div class=" col-12 col-xl-4 custom-form-border">
    <form method="post"  class="custom-form" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-12 form-group">
            <label asp-for="_formAttributesModel.AttributeName" class="control-label"></label>
            <input asp-for="_formAttributesModel.AttributeName" class="form-control textForm" required/>
            <span asp-validation-for="_formAttributesModel.AttributeName" class="text-danger"></span>
        </div>
        <div class="col-12 form-group">
            <label asp-for="_formAttributesModel.AttributeValue" class="control-label"></label>
            <input asp-for="_formAttributesModel.AttributeValue" class="form-control textForm" required/>
            <span asp-validation-for="_formAttributesModel.AttributeValue" class="text-danger"></span>
        </div>
        <div class="col-6 form-group">
            <label asp-for="_formAttributesModel.Typology" class="control-label"></label>
            <select asp-for="_formAttributesModel.Typology" class="form-select selectForm" multiple size="7">
                @{
                    foreach(var i in Model.TypologyAvailable)
                    {
                         <option value="@i.Id" id="@i.Id">@i.Name</option>
                    }
                }
            </select>
            <span asp-validation-for="_formAttributesModel.Typology" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" asp-page-handler="Create" value="Create" class="btn btn-primary" />
        </div>
    </form>
</div>

        @{
    if(IndexModel.lastCreate>0 && ModelState.ErrorCount == 0)
    {
        <div class="alert alert-success" role="alert">
            <p>Attributo inserito con successo</p>
        </div>
    }
}
@if(ModelState.ErrorCount > 0)
{
    <div class="alert alert-danger" role="alert">
        @Html.ValidationSummary(false, "", new { @class = "text-danger font-weight-bold" })
    </div>
}


<div class="row justify-content-between">
    <div class="col-4">
        <h1>Lista Attributes</h1>
    </div>
    <div class="col-4">
        <form>
            <p>
                Search: <input type="text" name="searchString" />
                <span class="form-group">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </span>
            </p>
        </form>
    </div>
</div>
<table class="table table-striped table-bordered" id="attributesList">
  <thead >
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">Value</th>
    </tr>
  </thead>
  <tbody class="table-group-divider">
        @{
            if(Model.AttributesList!=null){
            int k=1+(Model.AttributesList.PageIndex-1)*IndexModel.numberPage ;
                    @foreach (var item in Model.AttributesList)
                {
                    <tr>
                        <th scope="row">
                            @k
                        </th>
                        <td>
                            @Html.DisplayFor(modelItem => item.AttributeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AttributeValue)
                        </td>
                        <td>
                            <a asp-page="./EditAttributes" asp-route-id="@item.AttributesId">Edit</a> |
                                                         
                            <a asp-page="index" asp-page-handler="Delete" asp-route-attributesId="@item.AttributesId">Delete</a>
                        </td>
                    </tr>
                    k++;
                }
            }
            else
            {
                <h1>C'è stato un problema relativo al database. Ricaricare la pagina</h1>
                return;
            }
       }

  </tbody>
</table>

@if(IndexModel.callDelete==true && IndexModel.lastDelete>0 && ModelState.ErrorCount == 0)
{
    <div class="alert alert-success" role="alert">
        <p>Attributo eliminato con successo</p>
    </div>
}
else if(IndexModel.callDelete==true && IndexModel.lastDelete==0 && ModelState.ErrorCount != 0)
{
    <div class="alert alert-danger" role="alert">
        <p>Errore nell'eliminazione'</p>
    </div>
}

@{
    
    var prevDisabled = !Model.AttributesList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.AttributesList.HasNextPage ? "disabled" : "";
}

    <!--/*<a asp-action="../Attributes/Index"
   asp-route-pageIndex="@(Model.AttributesList.PageIndex - 1)"
   asp-route-searchString="@IndexModel.searchString"
   class="btn btn-default @prevDisabled">
            Previous
    </a>*/-->

    <a href="/Attributes/Index?pageIndex=@(Model.AttributesList.PageIndex - 1)&searchString=@IndexModel.searchString"
   class="btn btn-default @prevDisabled">
            Previous
    </a>

    <a href="/Attributes/Index?pageIndex=@(Model.AttributesList.PageIndex + 1)&searchString=@IndexModel.searchString"
   class="btn btn-default @nextDisabled">
            Next
    </a>
    <!--/*<a asp-action="./Attributes/Index"
   asp-route-pageIndex="@(Model.AttributesList.PageIndex + 1)"
   asp-route-searchString="@IndexModel.searchString"
   class="btn btn-default @nextDisabled">
            Next
    </a>*/-->


@{
    IndexModel.lastCreate = 0;
    IndexModel.lastDelete = 0;
    IndexModel.searchString = null;
    IndexModel.callDelete = false;
}