@page
@model CmsHeadless.Pages.Tag.IndexModel
@{
}

<div class="col-12 col-xl-4 custom-form-border">
    <form method="post"  class="custom-form" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="_formTagModel.Name" class="control-label"></label>
            <input asp-for="_formTagModel.Name" class="form-control" required/>
            <span asp-validation-for="_formTagModel.Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="_formTagModel.Url" class="control-label"></label>
            <input asp-for="_formTagModel.Url" class="form-control" required/>
            <span asp-validation-for="_formTagModel.Url" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" asp-page-handler="Create" value="Create" class="btn btn-primary" />
        </div>
    </form>
</div>

@{
    if(IndexModel.lastCreate>0 && ModelState.ErrorCount == 0)
    {
        <div class="alert alert-success" role="alert">
            <p>Tag inserito con successo</p>
        </div>
    }
}
@if(ModelState.ErrorCount > 0)
{
    <div class="alert alert-danger" role="alert">
        @Html.ValidationSummary(false, "", new { @class = "text-danger font-weight-bold" })
    </div>
}


<div class="row justify-content-between">
    <div class="col-4">
        <h1>Lista tag</h1>
    </div>
    <div class="col-4">
        <form>
            <p>
                Search: <input type="text" name="searchString" />
                <span class="form-group">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </span>
            </p>
        </form>
    </div>
</div>
<table class="table table-striped table-bordered" id="tagList">
  <thead >
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">Url</th>
    </tr>
  </thead>
  <tbody class="table-group-divider">
        @{
            if(Model.TagList!=null){
            int k=1+(Model.TagList.PageIndex-1)*IndexModel.numberPage ;
                    @foreach (var item in Model.TagList)
                {
                    <tr>
                        <th scope="row">
                            @k
                        </th>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Url)
                        </td>
                        <td>
                            <a asp-page="./EditTag" asp-route-id="@item.TagId">Edit</a> |
                                                         
                            <a asp-page="index" asp-page-handler="Delete" asp-route-tagId="@item.TagId">Delete</a>
                        </td>
                    </tr>
                    k++;
                }
            }
            else
            {
                <h1>C'è stato un problema relativo al database. Ricaricare la pagina</h1>
                return;
            }
       }

  </tbody>
</table>

@if(IndexModel.lastDelete>0 && ModelState.ErrorCount == 0)
{
    <div class="alert alert-success" role="alert">
        <p>Tag eliminato con successo</p>
    </div>
}
else if(IndexModel.lastDelete==0 && ModelState.ErrorCount != 0)
{
    <div class="alert alert-danger" role="alert">
        <p>Errore nell'eliminazione'</p>
    </div>
}

@{
    
    var prevDisabled = !Model.TagList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.TagList.HasNextPage ? "disabled" : "";
}

    <a asp-action="Index"
   asp-route-pageIndex="@(Model.TagList.PageIndex - 1)"
   asp-route-searchString="@IndexModel.searchString"
   class="btn btn-default @prevDisabled">
            Previous
    </a>
    <a asp-action="Index"
   asp-route-pageIndex="@(Model.TagList.PageIndex + 1)"
   asp-route-searchString="@IndexModel.searchString"
   class="btn btn-default @nextDisabled">
            Next
    </a>


@{
    IndexModel.lastCreate = 0;
    IndexModel.lastDelete = 0;
    IndexModel.searchString = null;
}